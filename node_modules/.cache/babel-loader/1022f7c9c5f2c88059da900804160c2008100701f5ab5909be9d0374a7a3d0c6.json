{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Documents\\\\GitHub\\\\website\\\\src\\\\components\\\\Photography.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './Photography.css';\nimport ImageWithCaption from './ImageWithCaption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Photography = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    // Function to run the Redbubble portfolio script\n    const initializePortfolio = () => {\n      if (!document.getElementById('rb-xzfcxvzx')) {\n        const portfolioScript = document.createElement('script');\n        portfolioScript.id = 'rb-xzfcxvzx';\n        portfolioScript.type = 'text/javascript';\n        portfolioScript.innerHTML = `new RBExternalPortfolio('www.redbubble.com', 'krood16', 1, 5).renderIframe();`;\n        containerRef.current.appendChild(portfolioScript);\n      }\n    };\n\n    // Create and append the external script\n    const externalScript = document.createElement('script');\n    externalScript.src = 'https://www.redbubble.com/assets/external_portfolio.js';\n    externalScript.async = true;\n    externalScript.onload = initializePortfolio;\n\n    // Append the external script to the container\n    if (containerRef.current && !containerRef.current.firstChild) {\n      containerRef.current.appendChild(externalScript);\n    }\n\n    // Cleanup function to remove scripts when component unmounts\n    return () => {\n      if (containerRef.current) {\n        containerRef.current.innerHTML = '';\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photography\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Photography\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container\",\n      children: /*#__PURE__*/_jsxDEV(ImageWithCaption, {\n        src: \"/images/img_bg_2.jpg\" // Replace with your actual image path\n        ,\n        alt: \"Sample Image\",\n        caption: \"This is a sample caption for the image.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"embed-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"rb-embed-container\",\n        ref: containerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Photography, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = Photography;\nexport default Photography;\nvar _c;\n$RefreshReg$(_c, \"Photography\");","map":{"version":3,"names":["React","useEffect","useRef","ImageWithCaption","jsxDEV","_jsxDEV","Photography","_s","containerRef","initializePortfolio","document","getElementById","portfolioScript","createElement","id","type","innerHTML","current","appendChild","externalScript","src","async","onload","firstChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","caption","ref","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Documents/GitHub/website/src/components/Photography.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './Photography.css';\r\nimport ImageWithCaption from './ImageWithCaption';\r\n\r\nconst Photography = () => {\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Function to run the Redbubble portfolio script\r\n    const initializePortfolio = () => {\r\n      if (!document.getElementById('rb-xzfcxvzx')) {\r\n        const portfolioScript = document.createElement('script');\r\n        portfolioScript.id = 'rb-xzfcxvzx';\r\n        portfolioScript.type = 'text/javascript';\r\n        portfolioScript.innerHTML = `new RBExternalPortfolio('www.redbubble.com', 'krood16', 1, 5).renderIframe();`;\r\n        containerRef.current.appendChild(portfolioScript);\r\n      }\r\n    };\r\n\r\n    // Create and append the external script\r\n    const externalScript = document.createElement('script');\r\n    externalScript.src = 'https://www.redbubble.com/assets/external_portfolio.js';\r\n    externalScript.async = true;\r\n    externalScript.onload = initializePortfolio;\r\n\r\n    // Append the external script to the container\r\n    if (containerRef.current && !containerRef.current.firstChild) {\r\n      containerRef.current.appendChild(externalScript);\r\n    }\r\n\r\n    // Cleanup function to remove scripts when component unmounts\r\n    return () => {\r\n      if (containerRef.current) {\r\n        containerRef.current.innerHTML = '';\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"photography\">\r\n      <h1>Photography</h1>\r\n\r\n      {/* Custom Image with Caption */}\r\n      <div className=\"gallery-container\">\r\n        <ImageWithCaption\r\n          src=\"/images/img_bg_2.jpg\"  // Replace with your actual image path\r\n          alt=\"Sample Image\"\r\n          caption=\"This is a sample caption for the image.\"\r\n        />\r\n      </div>\r\n\r\n      {/* Embed Redbubble Portfolio */}\r\n      <div className=\"embed-container\">\r\n        <div id=\"rb-embed-container\" ref={containerRef}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Photography;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,mBAAmB;AAC1B,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,YAAY,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;MAChC,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,EAAE;QAC3C,MAAMC,eAAe,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;QACxDD,eAAe,CAACE,EAAE,GAAG,aAAa;QAClCF,eAAe,CAACG,IAAI,GAAG,iBAAiB;QACxCH,eAAe,CAACI,SAAS,GAAG,+EAA+E;QAC3GR,YAAY,CAACS,OAAO,CAACC,WAAW,CAACN,eAAe,CAAC;MACnD;IACF,CAAC;;IAED;IACA,MAAMO,cAAc,GAAGT,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;IACvDM,cAAc,CAACC,GAAG,GAAG,wDAAwD;IAC7ED,cAAc,CAACE,KAAK,GAAG,IAAI;IAC3BF,cAAc,CAACG,MAAM,GAAGb,mBAAmB;;IAE3C;IACA,IAAID,YAAY,CAACS,OAAO,IAAI,CAACT,YAAY,CAACS,OAAO,CAACM,UAAU,EAAE;MAC5Df,YAAY,CAACS,OAAO,CAACC,WAAW,CAACC,cAAc,CAAC;IAClD;;IAEA;IACA,OAAO,MAAM;MACX,IAAIX,YAAY,CAACS,OAAO,EAAE;QACxBT,YAAY,CAACS,OAAO,CAACD,SAAS,GAAG,EAAE;MACrC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKmB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpBxB,OAAA;MAAKmB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChCpB,OAAA,CAACF,gBAAgB;QACfiB,GAAG,EAAC,sBAAsB,CAAE;QAAA;QAC5BU,GAAG,EAAC,cAAc;QAClBC,OAAO,EAAC;MAAyC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNxB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BpB,OAAA;QAAKS,EAAE,EAAC,oBAAoB;QAACkB,GAAG,EAAExB;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CArDID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAuDjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}